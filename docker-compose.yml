version: '3.3'
volumes:
  postgres-db:
  mongo-db:

services:
  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    expose:
      - 27017
    container_name: mongo
    environment:
      MONGO_INITDB_HOST: riskgame-mongo
      MONGO_INITDB_PORT: 27017
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: riskgame
    stdin_open: true
    tty: true

  postgres:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    expose:
      - 5432
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    volumes:
      - postgres-db:/var/postgresql11/data
      - ./db/init-scripts.sql:/docker-entrypoint-initdb.d/scripts.sql
    stdin_open: true
    tty: true

  core:
    image: "risk-game_core:latest"
    build:
      context: ./core
      dockerfile: Dockerfile
    container_name: core
    stdin_open: true
    tty: true
    restart: "no"

  persistence:
    image: "risk-game_persistence:latest"
    build:
      context: ./persistence
      dockerfile: Dockerfile
    container_name: persistence
    links:
      - postgres:postgres
    stdin_open: true
    tty: true
    restart: "no"
    ports:
      # <Port exposed> : < Port running inside container>
      - '8082:8082'
    depends_on:
      - postgres
      - mongo

  mapcreator:
    image: "risk-game_mapcreator:latest"
    build:
      context: ./mapcreator
      dockerfile: Dockerfile
    container_name: mapcreator
    stdin_open: true
    tty: true
    restart: "no"
    ports:
      # <Port exposed> : < Port running inside container>
      - '8083:8083'

  mapeditor:
    image: "risk-game_mapeditorr:latest"
    build:
      context: ./mapeditor
      dockerfile: Dockerfile
    container_name: mapeditor
    stdin_open: true
    tty: true
    restart: "no"
    ports:
      # <Port exposed> : < Port running inside container>
      - '8085:8085'
